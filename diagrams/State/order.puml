@startuml Order_Overall_With_SSE
skinparam shadowing false
skinparam state { 
    BackgroundColor white
    BorderColor #444 
}

' =======================
' Order lifecycle (+ edit self-loops)
' =======================
state Order {
  [*] --> Pending
  Delivered --> [*]
  Canceled  --> [*]

  state Pending {
    Pending : accept[ok] / prepare
    Pending : cancel[allowed] / cancel
    Pending : start_edit[allowed] / edit start
    Pending : update_items[valid] / recalc
    Pending : update_address[valid] / recalc
    Pending : apply_coupon[valid] / apply; recalc
    Pending : remove_coupon / remove; recalc
    Pending : save_edit / save
    Pending : discard_edit / discard
  }

  state Preparing {
    Preparing : mark_ready[packed] / ready
    Preparing : out_for_delivery[handoff] / dispatch
    Preparing : cancel[allowed] / cancel
  }

  state OutForDelivery {
    OutForDelivery : deliver[received] / deliver
    OutForDelivery : cancel[allowed] / cancel
  }

  state Delivered
  state Canceled

  ' edit self-loops
  Pending --> Pending : edit start
  Pending --> Pending : recalc
  Pending --> Pending : apply
  Pending --> Pending : remove
  Pending --> Pending : save
  Pending --> Pending : discard

  ' main transitions (labels = actions only)
  Pending --> Preparing       : prepare
  Preparing --> OutForDelivery: dispatch
  OutForDelivery --> Delivered: deliver
  Pending --> Canceled        : cancel
  Preparing --> Canceled      : cancel
  OutForDelivery --> Canceled : cancel
}

' =======================
' SSE connection
' =======================
state SSE {
  [*] --> Disconnected
  Disconnected --> [*] : terminate

  state Disconnected {
    Disconnected : connect[auth_ok] / open
  }

  state Connecting {
    Connecting : open[200] / subscribe
    Connecting : error[net] / backoff
    Connecting : unauthorized[401] / close
    Connecting : cancel[user] / close
  }

  state Listening {
    Listening : event[arrived] / push
    Listening : ping_timeout / backoff
    Listening : error[net] / backoff
    Listening : unauthorized[401] / close
    Listening : close[user] / close
  }

  state RetryBackoff {
    RetryBackoff : tick[wait_over] / reconnect
    RetryBackoff : cancel[user] / close
  }

  ' transitions (labels = actions only)
  Disconnected --> Connecting : open
  Connecting   --> Listening  : subscribe
  Connecting   --> RetryBackoff : backoff
  Connecting   --> Disconnected : close
  Listening    --> RetryBackoff : backoff
  Listening    --> Disconnected : close
  RetryBackoff --> Connecting : reconnect
  RetryBackoff --> Disconnected : close
}

' =======================
' Coupling (order events surface to SSE)
' =======================
Order.Pending --> SSE.Listening : push
Order.Preparing --> SSE.Listening : push
Order.OutForDelivery --> SSE.Listening : push
Order.Delivered --> SSE.Listening : push
Order.Canceled  --> SSE.Listening : push

@enduml
