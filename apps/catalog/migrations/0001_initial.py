# Generated by Django 5.2.6 on 2025-09-20 04:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DinnerType',
            fields=[
                ('dinner_type_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=120, unique=True)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('base_price_cents', models.PositiveIntegerField()),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'dinner_type',
            },
        ),
        migrations.CreateModel(
            name='ItemOptionGroup',
            fields=[
                ('group_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('select_mode', models.CharField(choices=[('single', 'Single'), ('multi', 'Multi')], max_length=10)),
                ('min_select', models.PositiveIntegerField(default=0)),
                ('max_select', models.IntegerField(blank=True, null=True)),
                ('is_required', models.BooleanField(default=False)),
                ('is_variant', models.BooleanField(default=False)),
                ('price_mode', models.CharField(choices=[('addon', 'Addon'), ('multiplier', 'Multiplier')], default='addon', max_length=12)),
                ('rank', models.IntegerField(default=1000)),
            ],
            options={
                'db_table': 'item_option_group',
                'ordering': ('rank', 'group_id'),
            },
        ),
        migrations.CreateModel(
            name='ItemTag',
            fields=[
                ('tag_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'item_tag',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ServingStyle',
            fields=[
                ('style_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=60, unique=True)),
                ('name', models.TextField()),
                ('price_mode', models.CharField(choices=[('addon', 'Addon'), ('multiplier', 'Multiplier')], max_length=12)),
                ('price_value', models.DecimalField(decimal_places=2, max_digits=7)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'serving_style',
            },
        ),
        migrations.CreateModel(
            name='DinnerOptionGroup',
            fields=[
                ('group_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('select_mode', models.CharField(choices=[('single', 'Single'), ('multi', 'Multi')], max_length=10)),
                ('min_select', models.PositiveIntegerField(default=0)),
                ('max_select', models.IntegerField(blank=True, null=True)),
                ('is_required', models.BooleanField(default=False)),
                ('price_mode', models.CharField(choices=[('addon', 'Addon'), ('multiplier', 'Multiplier')], default='addon', max_length=12)),
                ('rank', models.IntegerField(default=1000)),
                ('dinner_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='option_groups', to='catalog.dinnertype')),
            ],
            options={
                'db_table': 'dinner_option_group',
                'ordering': ('rank', 'group_id'),
            },
        ),
        migrations.CreateModel(
            name='ItemOption',
            fields=[
                ('option_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('price_delta_cents', models.PositiveIntegerField(default=0)),
                ('multiplier', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('rank', models.IntegerField(default=1000)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='catalog.itemoptiongroup')),
            ],
            options={
                'db_table': 'item_option',
                'ordering': ('rank', 'option_id'),
            },
        ),
        migrations.CreateModel(
            name='ItemTagMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.itemtag')),
            ],
            options={
                'db_table': 'item_tag_map',
            },
        ),
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('category_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('slug', models.SlugField(blank=True, max_length=120, null=True, unique=True)),
                ('rank', models.IntegerField(default=1000)),
                ('active', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='catalog.menucategory')),
            ],
            options={
                'db_table': 'menu_category',
                'ordering': ('rank', 'category_id'),
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('item_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=120, unique=True)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=50, null=True)),
                ('base_price_cents', models.PositiveIntegerField()),
                ('active', models.BooleanField(default=True)),
                ('attrs', models.JSONField(blank=True, default=dict)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.menucategory')),
                ('tags', models.ManyToManyField(blank=True, through='catalog.ItemTagMap', to='catalog.itemtag')),
            ],
            options={
                'db_table': 'menu_item',
            },
        ),
        migrations.AddField(
            model_name='itemtagmap',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.menuitem'),
        ),
        migrations.AddField(
            model_name='itemoptiongroup',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='option_groups', to='catalog.menuitem'),
        ),
        migrations.CreateModel(
            name='ItemAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dow', models.IntegerField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.menuitem')),
            ],
            options={
                'db_table': 'item_availability',
            },
        ),
        migrations.CreateModel(
            name='DinnerTypeDefaultItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_qty', models.DecimalField(decimal_places=2, max_digits=10)),
                ('included_in_base', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('dinner_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.dinnertype')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='catalog.menuitem')),
            ],
            options={
                'db_table': 'dinner_type_default_item',
            },
        ),
        migrations.CreateModel(
            name='DinnerOption',
            fields=[
                ('option_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('price_delta_cents', models.PositiveIntegerField(default=0)),
                ('multiplier', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('rank', models.IntegerField(default=1000)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='catalog.dinneroptiongroup')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='catalog.menuitem')),
            ],
            options={
                'db_table': 'dinner_option',
            },
        ),
        migrations.CreateModel(
            name='DinnerStyleAllowed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dinner_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.dinnertype')),
                ('style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.servingstyle')),
            ],
            options={
                'db_table': 'dinner_style_allowed',
            },
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['name'], name='idx_menu_item_name'),
        ),
        migrations.AlterUniqueTogether(
            name='itemtagmap',
            unique_together={('item', 'tag')},
        ),
        migrations.AddConstraint(
            model_name='itemoptiongroup',
            constraint=models.CheckConstraint(condition=models.Q(('max_select__isnull', True), ('max_select__gte', 0), _connector='OR'), name='ck_item_optgrp_max_nonneg'),
        ),
        migrations.AddConstraint(
            model_name='itemavailability',
            constraint=models.CheckConstraint(condition=models.Q(('dow__gte', 0), ('dow__lte', 6)), name='ck_item_avail_dow'),
        ),
        migrations.AlterUniqueTogether(
            name='itemavailability',
            unique_together={('item', 'dow', 'start_time')},
        ),
        migrations.AlterUniqueTogether(
            name='dinnertypedefaultitem',
            unique_together={('dinner_type', 'item')},
        ),
        migrations.AddConstraint(
            model_name='dinneroption',
            constraint=models.CheckConstraint(condition=models.Q(('item__isnull', False), ('name__isnull', False), _connector='OR'), name='ck_dinner_opt_has_name_or_item'),
        ),
        migrations.AlterUniqueTogether(
            name='dinnerstyleallowed',
            unique_together={('dinner_type', 'style')},
        ),
    ]
